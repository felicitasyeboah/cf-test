name: CI Pipeline for Spring Boot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: devdb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass

      # Step 3: Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec $(docker-compose ps -q mysql) mysqladmin ping --host=mysql --user=user --password=pass --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      # Step 4: Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 5: Verify Google Java Format
      - name: Check code format
        run: |
          curl -LJO https://github.com/google/google-java-format/releases/download/v1.15.0/google-java-format-1.15.0-all-deps.jar
          java -jar google-java-format-1.15.0-all-deps.jar --dry-run --set-exit-if-changed $(find . -name "*.java")
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      # Step 6: Build and run tests with Maven
      - name: Build and run tests
        run: mvn clean verify

      # Step 7: Analyze code coverage with JaCoCo
      - name: Generate code coverage report
        run: mvn jacoco:report

      # Step 8: Perform static code analysis (e.g., with SonarQube)
      - name: Static code analysis
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          projectBaseDir: '.'
          args: >
            -Dsonar.projectKey=cf-test
            -Dsonar.organization=felicitasyeboah
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Step 9: Stop Docker Compose
      - name: Stop Docker Compose
        run: docker-compose -f docker-compose.yml down
